@inject AuthStateProvider AuthStateProvider
@using System.IdentityModel.Tokens.Jwt
@using LiveVoting.WasmClient.Services
@using LiveVoting.WasmClient.StateManagement
@implements IDisposable
@inject HttpClient HttpClient
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Alegeri Prezidentiale</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3 text-success">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                @* <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> *@
                Acasa
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link d-flex align-items-center" href="istorie">
                @* <span class="bi bi-clock-history me-2" aria-hidden="true"></span> *@
                Istoria alegerilor
            </NavLink>
        </div>

        @if (AuthStateProvider.IsAuthenticated)
        {
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="account">
                @* <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span>  *@
                Account
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <button class="nav-link btn btn-link" @onclick="Logout">
                @* <span class="bi bi-box-arrow-right-nav-menu" aria-hidden="true"></span>  *@
                Logout
            </button>
        </div>
        }
        else
        {
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="login">
                @* <span class="bi bi-box-arrow-in-right-nav-menu" aria-hidden="true"></span> *@
                Login / Signup
            </NavLink>
        </div>
        @* <div class="nav-item px-3"> *@
        @*     <NavLink class="nav-link" href="signup"> *@
        @*         $1$ <span class="bi bi-pencil-square-nav-menu" aria-hidden="true"></span>  #1# *@
        @*         Signup *@
        @*     </NavLink> *@
        @* </div> *@
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        await AuthStateProvider.CheckAuthStateAsync();
        AuthStateProvider.OnAuthStateChanged += StateHasChanged;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        var token = await LocalStorage.GetItemAsync<string>("jwt");
        var guidClaim = JwtService.GetGuidClaimFromToken(token);
        var uri = $"/api/logout/{guidClaim}";
        Console.WriteLine("Guid " + guidClaim);
        var response = await HttpClient.PostAsJsonAsync(uri, "");
        
        if (!response.IsSuccessStatusCode)
        {
            Console.WriteLine("Logout failed");
        }
        else
        {
            // Handle successful login
            Console.WriteLine("Logout successful!");
        }
        await AuthStateProvider.LogoutAsync();
    }

    public void Dispose()
    {
        AuthStateProvider.OnAuthStateChanged -= StateHasChanged;
    }
}
<style>
    .nav-link {
        display: flex;
        align-items: center;
    }

    .nav-link .bi {
        font-size: 1.2em; /* Adjust icon size as needed */
        margin-right: 8px; /* Spacing between icon and text */
    }

</style>